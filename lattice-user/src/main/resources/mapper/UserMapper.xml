<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lattice.latticeuser.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.lattice.latticeuser.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="userID" property="userid" jdbcType="INTEGER"/>
    <result column="username" property="username" jdbcType="VARCHAR"/>
    <result column="password" property="password" jdbcType="VARCHAR"/>
    <result column="openid" property="openid" jdbcType="VARCHAR"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="CHAR"/>
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="phone" property="phone" jdbcType="VARCHAR"/>
    <result column="grade" property="grade" jdbcType="INTEGER"/>
    <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
    <result column="created" property="created" jdbcType="TIMESTAMP"/>
    <result column="roleID" property="roleid" jdbcType="INTEGER"/>
  </resultMap>
  <resultMap id="getAll" type="com.lattice.latticeuser.dto.UserDTO">
    <id column="userID" property="userid" jdbcType="INTEGER"/>
    <result column="username" property="username" jdbcType="VARCHAR"/>
    <result column="password" property="password" jdbcType="VARCHAR"/>
    <result column="openid" property="openid" jdbcType="VARCHAR"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="CHAR"/>
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="phone" property="phone" jdbcType="VARCHAR"/>
    <result column="grade" property="grade" jdbcType="INTEGER"/>
    <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
    <result column="created" property="created" jdbcType="TIMESTAMP"/>
    <association property="roleDTO" javaType="com.lattice.latticeuser.dto.RoleDTO" columnPrefix="r_">
      <id column="roleID" property="roleid" jdbcType="INTEGER"/>
      <result column="roleName" property="rolename" jdbcType="VARCHAR"/>
      <result column="created" property="created" jdbcType="TIMESTAMP"/>
      <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
      <result column="status" property="status" jdbcType="CHAR"/>
      <collection property="permissions" ofType="com.lattice.latticeuser.entity.Permission" columnPrefix="p_">
        <id column="permissionID" property="permissionid" jdbcType="INTEGER"/>
        <result column="permissionName" property="permissionname" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="CHAR"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
        <result column="roleID" property="roleid" jdbcType="INTEGER"/>
      </collection>
    </association>
    <collection property="logs" ofType="com.lattice.latticeuser.entity.Log" columnPrefix="l_">
      <id column="logID" property="logid" jdbcType="INTEGER"/>
      <result column="ip" property="ip" jdbcType="VARCHAR"/>
      <result column="created" property="created" jdbcType="TIMESTAMP"/>
      <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
      <result column="status" property="status" jdbcType="CHAR"/>
      <result column="userID" property="userid" jdbcType="INTEGER"/>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    userID, username, password, openid, name, status, email, phone, grade, updated, created,
    roleID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lattice.latticeuser.entity.UserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List"/>
    from tb_user
    where userID = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user
    where userID = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lattice.latticeuser.entity.UserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.lattice.latticeuser.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_user (userID, username, password,
    openid, name, status,
    email, phone, grade,
    updated, created, roleID
    )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{openid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=CHAR},
    #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER},
    #{updated,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP}, #{roleid,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.lattice.latticeuser.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="roleid != null">
        roleID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lattice.latticeuser.entity.UserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user
    <set>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roleid != null">
        roleID = #{record.roleid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user
    set userID = #{record.userid,jdbcType=INTEGER},
    username = #{record.username,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    openid = #{record.openid,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=CHAR},
    email = #{record.email,jdbcType=VARCHAR},
    phone = #{record.phone,jdbcType=VARCHAR},
    grade = #{record.grade,jdbcType=INTEGER},
    updated = #{record.updated,jdbcType=TIMESTAMP},
    created = #{record.created,jdbcType=TIMESTAMP},
    roleID = #{record.roleid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lattice.latticeuser.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="roleid != null">
        roleID = #{roleid,jdbcType=INTEGER},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lattice.latticeuser.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP},
    roleID = #{roleid,jdbcType=INTEGER}
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="getAll">
select
	u.userID  		    u_userID            ,
    u.username          u_username          ,
    u.password          u_password          ,
    u.openid            u_openid            ,
    u.name              u_name              ,
    u.status            u_status            ,
    u.email             u_email             ,
    u.phone             u_phone             ,
    u.grade             u_grade             ,
    u.updated           u_updated           ,
    u.created           u_created           ,
    u.roleID            u_roleID            ,
	r.roleID            r_roleID            ,
    r.roleName          r_roleName          ,
    r.created           r_created           ,
    r.updated           r_updated           ,
    r.status            r_status            ,
	p.permissionID      p_permissionID      ,
    p.permissionName    p_permissionName    ,
    p.status            p_status            ,
    p.created           p_created           ,
    p.updated           p_updated           ,
    p.roleID            p_roleID            ,
	l.logID             l_logID             ,
    l.ip                l_ip                ,
    l.created           l_created           ,
    l.updated           l_updated           ,
    l.status            l_status            ,
    l.userID            l_userID
from tb_user u left outer join tb_role r on u.roleID = r.roleID left outer join tb_permission p on r.roleID = p.roleID left outer join tb_log l on u.userID = l.userID where u.openid = #{openid}
  </select>
</mapper>