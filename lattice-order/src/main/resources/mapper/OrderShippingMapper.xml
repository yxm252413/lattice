<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lattice.latticeorder.dao.OrderShippingMapper" >
  <resultMap id="BaseResultMap" type="com.lattice.latticeorder.entity.OrderShipping" >
    <id column="orderShippingID" property="ordershippingid" jdbcType="INTEGER" />
    <result column="receiverName" property="receivername" jdbcType="VARCHAR" />
    <result column="receiverPhone" property="receiverphone" jdbcType="VARCHAR" />
    <result column="receiverState" property="receiverstate" jdbcType="VARCHAR" />
    <result column="receiverCity" property="receivercity" jdbcType="VARCHAR" />
    <result column="receiverDistrict" property="receiverdistrict" jdbcType="VARCHAR" />
    <result column="receiverAddress" property="receiveraddress" jdbcType="VARCHAR" />
    <result column="receiverZip" property="receiverzip" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="orderID" property="orderid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderShippingID, receiverName, receiverPhone, receiverState, receiverCity, receiverDistrict, 
    receiverAddress, receiverZip, created, updated, orderID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lattice.latticeorder.entity.OrderShippingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order_shipping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_order_shipping
    where orderShippingID = #{ordershippingid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_order_shipping
    where orderShippingID = #{ordershippingid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lattice.latticeorder.entity.OrderShippingExample" >
    delete from tb_order_shipping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lattice.latticeorder.entity.OrderShipping" >
    insert into tb_order_shipping (orderShippingID, receiverName, receiverPhone, 
      receiverState, receiverCity, receiverDistrict, 
      receiverAddress, receiverZip, created, 
      updated, orderID)
    values (#{ordershippingid,jdbcType=INTEGER}, #{receivername,jdbcType=VARCHAR}, #{receiverphone,jdbcType=VARCHAR}, 
      #{receiverstate,jdbcType=VARCHAR}, #{receivercity,jdbcType=VARCHAR}, #{receiverdistrict,jdbcType=VARCHAR}, 
      #{receiveraddress,jdbcType=VARCHAR}, #{receiverzip,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{orderid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lattice.latticeorder.entity.OrderShipping"  useGeneratedKeys="true"
          keyProperty="orderShippingID">
    insert into tb_order_shipping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ordershippingid != null" >
        orderShippingID,
      </if>
      <if test="receivername != null" >
        receiverName,
      </if>
      <if test="receiverphone != null" >
        receiverPhone,
      </if>
      <if test="receiverstate != null" >
        receiverState,
      </if>
      <if test="receivercity != null" >
        receiverCity,
      </if>
      <if test="receiverdistrict != null" >
        receiverDistrict,
      </if>
      <if test="receiveraddress != null" >
        receiverAddress,
      </if>
      <if test="receiverzip != null" >
        receiverZip,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="orderid != null" >
        orderID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ordershippingid != null" >
        #{ordershippingid,jdbcType=INTEGER},
      </if>
      <if test="receivername != null" >
        #{receivername,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null" >
        #{receiverphone,jdbcType=VARCHAR},
      </if>
      <if test="receiverstate != null" >
        #{receiverstate,jdbcType=VARCHAR},
      </if>
      <if test="receivercity != null" >
        #{receivercity,jdbcType=VARCHAR},
      </if>
      <if test="receiverdistrict != null" >
        #{receiverdistrict,jdbcType=VARCHAR},
      </if>
      <if test="receiveraddress != null" >
        #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverzip != null" >
        #{receiverzip,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lattice.latticeorder.entity.OrderShippingExample" resultType="java.lang.Integer" >
    select count(*) from tb_order_shipping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_order_shipping
    <set >
      <if test="record.ordershippingid != null" >
        orderShippingID = #{record.ordershippingid,jdbcType=INTEGER},
      </if>
      <if test="record.receivername != null" >
        receiverName = #{record.receivername,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverphone != null" >
        receiverPhone = #{record.receiverphone,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverstate != null" >
        receiverState = #{record.receiverstate,jdbcType=VARCHAR},
      </if>
      <if test="record.receivercity != null" >
        receiverCity = #{record.receivercity,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverdistrict != null" >
        receiverDistrict = #{record.receiverdistrict,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveraddress != null" >
        receiverAddress = #{record.receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverzip != null" >
        receiverZip = #{record.receiverzip,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderid != null" >
        orderID = #{record.orderid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_order_shipping
    set orderShippingID = #{record.ordershippingid,jdbcType=INTEGER},
      receiverName = #{record.receivername,jdbcType=VARCHAR},
      receiverPhone = #{record.receiverphone,jdbcType=VARCHAR},
      receiverState = #{record.receiverstate,jdbcType=VARCHAR},
      receiverCity = #{record.receivercity,jdbcType=VARCHAR},
      receiverDistrict = #{record.receiverdistrict,jdbcType=VARCHAR},
      receiverAddress = #{record.receiveraddress,jdbcType=VARCHAR},
      receiverZip = #{record.receiverzip,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      orderID = #{record.orderid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lattice.latticeorder.entity.OrderShipping" >
    update tb_order_shipping
    <set >
      <if test="receivername != null" >
        receiverName = #{receivername,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null" >
        receiverPhone = #{receiverphone,jdbcType=VARCHAR},
      </if>
      <if test="receiverstate != null" >
        receiverState = #{receiverstate,jdbcType=VARCHAR},
      </if>
      <if test="receivercity != null" >
        receiverCity = #{receivercity,jdbcType=VARCHAR},
      </if>
      <if test="receiverdistrict != null" >
        receiverDistrict = #{receiverdistrict,jdbcType=VARCHAR},
      </if>
      <if test="receiveraddress != null" >
        receiverAddress = #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverzip != null" >
        receiverZip = #{receiverzip,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="orderid != null" >
        orderID = #{orderid,jdbcType=INTEGER},
      </if>
    </set>
    where orderShippingID = #{ordershippingid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lattice.latticeorder.entity.OrderShipping" >
    update tb_order_shipping
    set receiverName = #{receivername,jdbcType=VARCHAR},
      receiverPhone = #{receiverphone,jdbcType=VARCHAR},
      receiverState = #{receiverstate,jdbcType=VARCHAR},
      receiverCity = #{receivercity,jdbcType=VARCHAR},
      receiverDistrict = #{receiverdistrict,jdbcType=VARCHAR},
      receiverAddress = #{receiveraddress,jdbcType=VARCHAR},
      receiverZip = #{receiverzip,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      orderID = #{orderid,jdbcType=INTEGER}
    where orderShippingID = #{ordershippingid,jdbcType=INTEGER}
  </update>
</mapper>