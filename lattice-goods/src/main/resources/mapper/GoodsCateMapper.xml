<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lattice.latticegoods.dao.GoodsCateMapper">
  <resultMap id="BaseResultMap" type="com.lattice.latticegoods.entity.GoodsCate">
    <id column="cateID" property="cateid" jdbcType="INTEGER"/>
    <result column="ord" property="ord" jdbcType="INTEGER"/>
    <result column="title" property="title" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="TINYINT"/>
    <result column="created" property="created" jdbcType="TIMESTAMP"/>
    <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
    <result column="father" property="father" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cateID, ord, title, status, created, updated, father
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap"
          parameterType="com.lattice.latticegoods.entity.GoodsCateExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from tb_goods_cate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from tb_goods_cate
    where cateID = #{cateid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_goods_cate
    where cateID = #{cateid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lattice.latticegoods.entity.GoodsCateExample">
    delete from tb_goods_cate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.lattice.latticegoods.entity.GoodsCate">
    insert into tb_goods_cate (cateID, ord, title, 
      status, created, updated, 
      father)
    values (#{cateid,jdbcType=INTEGER}, #{ord,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{father,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lattice.latticegoods.entity.GoodsCate">
    insert into tb_goods_cate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cateid != null">
        cateID,
      </if>
      <if test="ord != null">
        ord,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="father != null">
        father,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cateid != null">
        #{cateid,jdbcType=INTEGER},
      </if>
      <if test="ord != null">
        #{ord,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="father != null">
        #{father,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lattice.latticegoods.entity.GoodsCateExample"
          resultType="java.lang.Integer">
    select count(*) from tb_goods_cate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_goods_cate
    <set>
      <if test="record.cateid != null">
        cateID = #{record.cateid,jdbcType=INTEGER},
      </if>
      <if test="record.ord != null">
        ord = #{record.ord,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.father != null">
        father = #{record.father,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_goods_cate
    set cateID = #{record.cateid,jdbcType=INTEGER},
    ord = #{record.ord,jdbcType=INTEGER},
    title = #{record.title,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=TINYINT},
    created = #{record.created,jdbcType=TIMESTAMP},
    updated = #{record.updated,jdbcType=TIMESTAMP},
    father = #{record.father,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lattice.latticegoods.entity.GoodsCate">
    update tb_goods_cate
    <set>
      <if test="ord != null">
        ord = #{ord,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="father != null">
        father = #{father,jdbcType=INTEGER},
      </if>
    </set>
    where cateID = #{cateid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lattice.latticegoods.entity.GoodsCate">
    update tb_goods_cate
    set ord = #{ord,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      father = #{father,jdbcType=INTEGER}
    where cateID = #{cateid,jdbcType=INTEGER}
  </update>
  <update id="updateStatus">
    update tb_goods_cate
    set  status = #{status,jdbcType=TINYINT}
    where cateID = #{cateid,jdbcType=INTEGER}
  </update>
</mapper>